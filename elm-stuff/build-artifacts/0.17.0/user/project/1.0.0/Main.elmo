var _user$project$Main$decodeGifUrl = A2(
	_elm_lang$core$Json_Decode$at,
	_elm_lang$core$Native_List.fromArray(
		['data', 'image_url']),
	_elm_lang$core$Json_Decode$string);
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {topic: a, gifUrl: b, error: c};
	});
var _user$project$Main$FetchFail = function (a) {
	return {ctor: 'FetchFail', _0: a};
};
var _user$project$Main$FetchSucceed = function (a) {
	return {ctor: 'FetchSucceed', _0: a};
};
var _user$project$Main$getRandomGif = function (topic) {
	var url = A2(_elm_lang$core$Basics_ops['++'], 'http://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=', topic);
	return A3(
		_elm_lang$core$Task$perform,
		_user$project$Main$FetchFail,
		_user$project$Main$FetchSucceed,
		A2(_evancz$elm_http$Http$get, _user$project$Main$decodeGifUrl, url));
};
var _user$project$Main$init = function (topic) {
	return {
		ctor: '_Tuple2',
		_0: A3(_user$project$Main$Model, topic, 'waiting.gif', ''),
		_1: _user$project$Main$getRandomGif(topic)
	};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'MorePlease':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$getRandomGif(model.topic)
				};
			case 'FetchSucceed':
				return {
					ctor: '_Tuple2',
					_0: A3(_user$project$Main$Model, model.topic, _p0._0, ''),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: A3(
						_user$project$Main$Model,
						model.topic,
						model.gifUrl,
						_elm_lang$core$Basics$toString(_p0._0)),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$MorePlease = {ctor: 'MorePlease'};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$h2,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(model.topic)
					])),
				A2(
				_elm_lang$html$Html$button,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Events$onClick(_user$project$Main$MorePlease)
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text('More Please!')
					])),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$img,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$src(model.gifUrl)
					]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$br,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[])),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html_Attributes$style(
						_elm_lang$core$Native_List.fromArray(
							[
								{ctor: '_Tuple2', _0: 'color', _1: 'red'}
							]))
					]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(model.error)
					]))
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _user$project$Main$init('cats'),
			view: _user$project$Main$view,
			update: _user$project$Main$update,
			subscriptions: _user$project$Main$subscriptions
		})
};
